// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TasksPage Should render TasksPage correctly 1`] = `
<BrowserRouter>
  <Router
    location={
      Object {
        "hash": "",
        "key": "default",
        "pathname": "/",
        "search": "",
        "state": null,
      }
    }
    navigationType="POP"
    navigator={
      Object {
        "action": "POP",
        "back": [Function],
        "block": [Function],
        "createHref": [Function],
        "forward": [Function],
        "go": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "@@observable": [Function],
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "tertiary": Object {
                "contrastText": "blue",
                "dark": "white",
                "main": "red",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <TasksPage>
          <Styled(MuiBox)
            alignItems="center"
            height="100%"
            id="page-all-tasks"
          >
            <div
              className="MuiBox-root MuiBox-root-1"
              id="page-all-tasks"
            >
              <WithStyles(ForwardRef(Button))
                color="secondary"
                onClick={[Function]}
                size="large"
                startIcon={<Memo />}
                style={
                  Object {
                    "left": "10%",
                    "position": "sticky",
                    "top": "0",
                    "zIndex": 2,
                  }
                }
                variant="contained"
              >
                <ForwardRef(Button)
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="secondary"
                  onClick={[Function]}
                  size="large"
                  startIcon={<Memo />}
                  style={
                    Object {
                      "left": "10%",
                      "position": "sticky",
                      "top": "0",
                      "zIndex": 2,
                    }
                  }
                  variant="contained"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    style={
                      Object {
                        "left": "10%",
                        "position": "sticky",
                        "top": "0",
                        "zIndex": 2,
                      }
                    }
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                      style={
                        Object {
                          "left": "10%",
                          "position": "sticky",
                          "top": "0",
                          "zIndex": 2,
                        }
                      }
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "left": "10%",
                            "position": "sticky",
                            "top": "0",
                            "zIndex": 2,
                          }
                        }
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          <span
                            className="MuiButton-startIcon MuiButton-iconSizeLarge"
                          >
                            <ForwardRef(CasinoIcon)>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef(CasinoIcon)>
                          </span>
                          Szczęśliwy traf
                        </span>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
              <WithStyles(ForwardRef(Typography))
                align="center"
                style={
                  Object {
                    "margin": "1rem 0 2rem 0",
                  }
                }
                variant="h1"
              >
                <ForwardRef(Typography)
                  align="center"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  style={
                    Object {
                      "margin": "1rem 0 2rem 0",
                    }
                  }
                  variant="h1"
                >
                  <h1
                    className="MuiTypography-root MuiTypography-h1 MuiTypography-alignCenter"
                    style={
                      Object {
                        "margin": "1rem 0 2rem 0",
                      }
                    }
                  >
                    Wszystkie zadania
                  </h1>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <TasksList
                endSlice={8}
                startSlice={0}
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-2"
                  >
                    <Styled(MuiBox)
                      display="flex"
                      justifyContent="center"
                      style={
                        Object {
                          "margin": "4rem 0 1rem",
                        }
                      }
                    >
                      <div
                        className="MuiBox-root MuiBox-root-3"
                        style={
                          Object {
                            "margin": "4rem 0 1rem",
                          }
                        }
                      />
                    </Styled(MuiBox)>
                    <WithStyles(ForwardRef(Typography))
                      align="center"
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      variant="subtitle2"
                    >
                      <ForwardRef(Typography)
                        align="center"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        style={
                          Object {
                            "marginTop": "1rem",
                          }
                        }
                        variant="subtitle2"
                      >
                        <h6
                          className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-alignCenter"
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                        >
                          Najpopularniejsze kategorie:
                        </h6>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <Styled(MuiBox)
                      alignItems="center"
                      display="flex"
                      flexWrap="wrap"
                      gridColumnGap="2rem"
                      id="filtering-buttons"
                      justifyContent="center"
                      margin="1rem"
                      padding="0 0 2rem 0"
                    >
                      <div
                        className="MuiBox-root MuiBox-root-4"
                        id="filtering-buttons"
                      >
                        <ForwardRef(CustomButton)
                          color="primary"
                          onClick={[Function]}
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                          variant="outlined"
                        >
                          <WithStyles(ForwardRef(Button))
                            className=""
                            color="primary"
                            onClick={[Function]}
                            style={
                              Object {
                                "marginTop": "1rem",
                              }
                            }
                            variant="outlined"
                          >
                            <ForwardRef(Button)
                              className=""
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginTop": "1rem",
                                }
                              }
                              variant="outlined"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginTop": "1rem",
                                  }
                                }
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginTop": "1rem",
                                    }
                                  }
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    style={
                                      Object {
                                        "marginTop": "1rem",
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      Wszystkie
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </ForwardRef(CustomButton)>
                        <ForwardRef(CustomButton)
                          color="secondary"
                          id="Strony www"
                          key="item-0"
                          onClick={[Function]}
                          startIcon={<Memo />}
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                          variant="contained"
                        >
                          <WithStyles(ForwardRef(Button))
                            className=""
                            color="secondary"
                            id="Strony www"
                            onClick={[Function]}
                            startIcon={<Memo />}
                            style={
                              Object {
                                "marginTop": "1rem",
                              }
                            }
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              className=""
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="secondary"
                              id="Strony www"
                              onClick={[Function]}
                              startIcon={<Memo />}
                              style={
                                Object {
                                  "marginTop": "1rem",
                                }
                              }
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                id="Strony www"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginTop": "1rem",
                                  }
                                }
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  id="Strony www"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginTop": "1rem",
                                    }
                                  }
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                    disabled={false}
                                    id="Strony www"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    style={
                                      Object {
                                        "marginTop": "1rem",
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef(ComputerIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ComputerIcon)>
                                      </span>
                                      <WithStyles(ForwardRef(Divider))
                                        flexItem={true}
                                        orientation="vertical"
                                        style={
                                          Object {
                                            "backgroundColor": "#eee",
                                            "marginRight": "10px",
                                          }
                                        }
                                      >
                                        <ForwardRef(Divider)
                                          classes={
                                            Object {
                                              "absolute": "MuiDivider-absolute",
                                              "flexItem": "MuiDivider-flexItem",
                                              "inset": "MuiDivider-inset",
                                              "light": "MuiDivider-light",
                                              "middle": "MuiDivider-middle",
                                              "root": "MuiDivider-root",
                                              "vertical": "MuiDivider-vertical",
                                            }
                                          }
                                          flexItem={true}
                                          orientation="vertical"
                                          style={
                                            Object {
                                              "backgroundColor": "#eee",
                                              "marginRight": "10px",
                                            }
                                          }
                                        >
                                          <hr
                                            className="MuiDivider-root MuiDivider-flexItem MuiDivider-vertical"
                                            style={
                                              Object {
                                                "backgroundColor": "#eee",
                                                "marginRight": "10px",
                                              }
                                            }
                                          />
                                        </ForwardRef(Divider)>
                                      </WithStyles(ForwardRef(Divider))>
                                       
                                      Strony www
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </ForwardRef(CustomButton)>
                        <ForwardRef(CustomButton)
                          color="primary"
                          id="Excel"
                          key="item-1"
                          onClick={[Function]}
                          startIcon={<Memo />}
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                          variant="contained"
                        >
                          <WithStyles(ForwardRef(Button))
                            className=""
                            color="primary"
                            id="Excel"
                            onClick={[Function]}
                            startIcon={<Memo />}
                            style={
                              Object {
                                "marginTop": "1rem",
                              }
                            }
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              className=""
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              id="Excel"
                              onClick={[Function]}
                              startIcon={<Memo />}
                              style={
                                Object {
                                  "marginTop": "1rem",
                                }
                              }
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                id="Excel"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginTop": "1rem",
                                  }
                                }
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  id="Excel"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginTop": "1rem",
                                    }
                                  }
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                    disabled={false}
                                    id="Excel"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    style={
                                      Object {
                                        "marginTop": "1rem",
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef(ListAltIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9zM11 7h6v2h-6V7zm0 4h6v2h-6v-2zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ListAltIcon)>
                                      </span>
                                      <WithStyles(ForwardRef(Divider))
                                        flexItem={true}
                                        orientation="vertical"
                                        style={
                                          Object {
                                            "backgroundColor": "#eee",
                                            "marginRight": "10px",
                                          }
                                        }
                                      >
                                        <ForwardRef(Divider)
                                          classes={
                                            Object {
                                              "absolute": "MuiDivider-absolute",
                                              "flexItem": "MuiDivider-flexItem",
                                              "inset": "MuiDivider-inset",
                                              "light": "MuiDivider-light",
                                              "middle": "MuiDivider-middle",
                                              "root": "MuiDivider-root",
                                              "vertical": "MuiDivider-vertical",
                                            }
                                          }
                                          flexItem={true}
                                          orientation="vertical"
                                          style={
                                            Object {
                                              "backgroundColor": "#eee",
                                              "marginRight": "10px",
                                            }
                                          }
                                        >
                                          <hr
                                            className="MuiDivider-root MuiDivider-flexItem MuiDivider-vertical"
                                            style={
                                              Object {
                                                "backgroundColor": "#eee",
                                                "marginRight": "10px",
                                              }
                                            }
                                          />
                                        </ForwardRef(Divider)>
                                      </WithStyles(ForwardRef(Divider))>
                                       
                                      Excel
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </ForwardRef(CustomButton)>
                        <ForwardRef(CustomButton)
                          color="primary"
                          id="Korepetycje"
                          key="item-2"
                          onClick={[Function]}
                          startIcon={<Memo />}
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                          variant="contained"
                        >
                          <WithStyles(ForwardRef(Button))
                            className=""
                            color="primary"
                            id="Korepetycje"
                            onClick={[Function]}
                            startIcon={<Memo />}
                            style={
                              Object {
                                "marginTop": "1rem",
                              }
                            }
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              className=""
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              id="Korepetycje"
                              onClick={[Function]}
                              startIcon={<Memo />}
                              style={
                                Object {
                                  "marginTop": "1rem",
                                }
                              }
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                id="Korepetycje"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginTop": "1rem",
                                  }
                                }
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  id="Korepetycje"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginTop": "1rem",
                                    }
                                  }
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                    disabled={false}
                                    id="Korepetycje"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    style={
                                      Object {
                                        "marginTop": "1rem",
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef(SchoolIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(SchoolIcon)>
                                      </span>
                                      <WithStyles(ForwardRef(Divider))
                                        flexItem={true}
                                        orientation="vertical"
                                        style={
                                          Object {
                                            "backgroundColor": "#eee",
                                            "marginRight": "10px",
                                          }
                                        }
                                      >
                                        <ForwardRef(Divider)
                                          classes={
                                            Object {
                                              "absolute": "MuiDivider-absolute",
                                              "flexItem": "MuiDivider-flexItem",
                                              "inset": "MuiDivider-inset",
                                              "light": "MuiDivider-light",
                                              "middle": "MuiDivider-middle",
                                              "root": "MuiDivider-root",
                                              "vertical": "MuiDivider-vertical",
                                            }
                                          }
                                          flexItem={true}
                                          orientation="vertical"
                                          style={
                                            Object {
                                              "backgroundColor": "#eee",
                                              "marginRight": "10px",
                                            }
                                          }
                                        >
                                          <hr
                                            className="MuiDivider-root MuiDivider-flexItem MuiDivider-vertical"
                                            style={
                                              Object {
                                                "backgroundColor": "#eee",
                                                "marginRight": "10px",
                                              }
                                            }
                                          />
                                        </ForwardRef(Divider)>
                                      </WithStyles(ForwardRef(Divider))>
                                       
                                      Korepetycje
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </ForwardRef(CustomButton)>
                        <ForwardRef(CustomButton)
                          color="primary"
                          id="Opieka nad dziećmi"
                          key="item-3"
                          onClick={[Function]}
                          startIcon={<Memo />}
                          style={
                            Object {
                              "marginTop": "1rem",
                            }
                          }
                          variant="contained"
                        >
                          <WithStyles(ForwardRef(Button))
                            className=""
                            color="primary"
                            id="Opieka nad dziećmi"
                            onClick={[Function]}
                            startIcon={<Memo />}
                            style={
                              Object {
                                "marginTop": "1rem",
                              }
                            }
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              className=""
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              id="Opieka nad dziećmi"
                              onClick={[Function]}
                              startIcon={<Memo />}
                              style={
                                Object {
                                  "marginTop": "1rem",
                                }
                              }
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                id="Opieka nad dziećmi"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginTop": "1rem",
                                  }
                                }
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  id="Opieka nad dziećmi"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginTop": "1rem",
                                    }
                                  }
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                    disabled={false}
                                    id="Opieka nad dziećmi"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    style={
                                      Object {
                                        "marginTop": "1rem",
                                      }
                                    }
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef(ChildFriendlyIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M13 2v8h8c0-4.42-3.58-8-8-8zm6.32 13.89C20.37 14.54 21 12.84 21 11H6.44l-.95-2H2v2h2.22s1.89 4.07 2.12 4.42c-1.1.59-1.84 1.75-1.84 3.08C4.5 20.43 6.07 22 8 22c1.76 0 3.22-1.3 3.46-3h2.08c.24 1.7 1.7 3 3.46 3 1.93 0 3.5-1.57 3.5-3.5 0-1.04-.46-1.97-1.18-2.61zM8 20c-.83 0-1.5-.67-1.5-1.5S7.17 17 8 17s1.5.67 1.5 1.5S8.83 20 8 20zm9 0c-.83 0-1.5-.67-1.5-1.5S16.17 17 17 17s1.5.67 1.5 1.5S17.83 20 17 20z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ChildFriendlyIcon)>
                                      </span>
                                      <WithStyles(ForwardRef(Divider))
                                        flexItem={true}
                                        orientation="vertical"
                                        style={
                                          Object {
                                            "backgroundColor": "#eee",
                                            "marginRight": "10px",
                                          }
                                        }
                                      >
                                        <ForwardRef(Divider)
                                          classes={
                                            Object {
                                              "absolute": "MuiDivider-absolute",
                                              "flexItem": "MuiDivider-flexItem",
                                              "inset": "MuiDivider-inset",
                                              "light": "MuiDivider-light",
                                              "middle": "MuiDivider-middle",
                                              "root": "MuiDivider-root",
                                              "vertical": "MuiDivider-vertical",
                                            }
                                          }
                                          flexItem={true}
                                          orientation="vertical"
                                          style={
                                            Object {
                                              "backgroundColor": "#eee",
                                              "marginRight": "10px",
                                            }
                                          }
                                        >
                                          <hr
                                            className="MuiDivider-root MuiDivider-flexItem MuiDivider-vertical"
                                            style={
                                              Object {
                                                "backgroundColor": "#eee",
                                                "marginRight": "10px",
                                              }
                                            }
                                          />
                                        </ForwardRef(Divider)>
                                      </WithStyles(ForwardRef(Divider))>
                                       
                                      Opieka nad dziećmi
                                    </span>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </ForwardRef(CustomButton)>
                      </div>
                    </Styled(MuiBox)>
                    <Styled(MuiBox)
                      alignItems="center"
                      display="flex"
                      flexWrap="wrap"
                      justifyContent="space-evenly"
                    >
                      <div
                        className="MuiBox-root MuiBox-root-8"
                      >
                        <ForwardRef(FormControl)
                          style={
                            Object {
                              "bottom": "10px",
                            }
                          }
                          variant="standard"
                        >
                          <MuiFormControlRoot
                            as="div"
                            className="MuiFormControl-root"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(InputLabel)>
                                    Wybierz kategorię
                                  </ForwardRef(InputLabel)>,
                                  <ForwardRef(Select)
                                    label="Wybierz kategorię"
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "fontSize": "1rem",
                                        "width": "260px",
                                      }
                                    }
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value=""
                                    >
                                      <em>
                                        Wszystkie kategorie
                                      </em>
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Strony www"
                                    >
                                      Strony www
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Excel"
                                    >
                                      Excel
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Korepetycje"
                                    >
                                      Korepetycje
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Opieka nad dziećmi"
                                    >
                                      Opieka nad dziećmi
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Wyprowadzanie psów"
                                    >
                                      Wyprowadzanie psów
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Fotografia"
                                    >
                                      Fotografia
                                    </WithStyles(ForwardRef(MenuItem))>
                                    <WithStyles(ForwardRef(MenuItem))
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                        }
                                      }
                                      value="Tłumaczenia"
                                    >
                                      Tłumaczenia
                                    </WithStyles(ForwardRef(MenuItem))>
                                  </ForwardRef(Select)>,
                                ],
                                "color": "primary",
                                "component": "div",
                                "disabled": false,
                                "error": false,
                                "fullWidth": false,
                                "hiddenLabel": false,
                                "margin": "none",
                                "required": false,
                                "size": "medium",
                                "style": Object {
                                  "bottom": "10px",
                                },
                                "variant": "standard",
                              }
                            }
                            style={
                              Object {
                                "bottom": "10px",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiFormControl-root css-1nrlq1o-MuiFormControl-root"
                              style={
                                Object {
                                  "bottom": "10px",
                                }
                              }
                            >
                              <ForwardRef(InputLabel)>
                                <MuiInputLabelRoot
                                  classes={
                                    Object {
                                      "asterisk": "",
                                      "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard",
                                    }
                                  }
                                  data-shrink={false}
                                  ownerState={
                                    Object {
                                      "children": "Wybierz kategorię",
                                      "disableAnimation": false,
                                      "formControl": Object {
                                        "adornedStart": false,
                                        "color": "primary",
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "fullWidth": false,
                                        "hiddenLabel": false,
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "registerEffect": [Function],
                                        "required": false,
                                        "setAdornedStart": [Function],
                                        "size": "medium",
                                        "variant": "standard",
                                      },
                                      "required": false,
                                      "shrink": false,
                                      "size": "medium",
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <Noop />
                                  <ForwardRef(FormLabel)
                                    className="css-1so17hl-MuiInputLabel-root"
                                    classes={
                                      Object {
                                        "asterisk": "",
                                        "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <MuiFormLabelRoot
                                      as="label"
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorPrimary css-1so17hl-MuiInputLabel-root"
                                      classes={
                                        Object {
                                          "asterisk": "",
                                          "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard",
                                        }
                                      }
                                      data-shrink={false}
                                      ownerState={
                                        Object {
                                          "children": "Wybierz kategorię",
                                          "className": "css-1so17hl-MuiInputLabel-root",
                                          "classes": Object {
                                            "asterisk": "",
                                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard",
                                          },
                                          "color": "primary",
                                          "component": "label",
                                          "data-shrink": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "required": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <label
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorPrimary css-aqpgxn-MuiFormLabel-root-MuiInputLabel-root"
                                        data-shrink={false}
                                      >
                                        Wybierz kategorię
                                      </label>
                                    </MuiFormLabelRoot>
                                  </ForwardRef(FormLabel)>
                                </MuiInputLabelRoot>
                              </ForwardRef(InputLabel)>
                              <ForwardRef(Select)
                                label="Wybierz kategorię"
                                onChange={[Function]}
                                style={
                                  Object {
                                    "fontSize": "1rem",
                                    "width": "260px",
                                  }
                                }
                                value=""
                              >
                                <ForwardRef(Input)
                                  className=""
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "aria-describedby": [Function],
                                        "aria-label": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultOpen": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": undefined,
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <WithStyles(ForwardRef(MenuItem))
                                          style={
                                            Object {
                                              "fontSize": "1rem",
                                            }
                                          }
                                          value=""
                                        >
                                          <em>
                                            Wszystkie kategorie
                                          </em>
                                        </WithStyles(ForwardRef(MenuItem))>,
                                        Array [
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Strony www"
                                          >
                                            Strony www
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Excel"
                                          >
                                            Excel
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Korepetycje"
                                          >
                                            Korepetycje
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Opieka nad dziećmi"
                                          >
                                            Opieka nad dziećmi
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Wyprowadzanie psów"
                                          >
                                            Wyprowadzanie psów
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Fotografia"
                                          >
                                            Fotografia
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value="Tłumaczenia"
                                          >
                                            Tłumaczenia
                                          </WithStyles(ForwardRef(MenuItem))>,
                                        ],
                                      ],
                                      "classes": Object {},
                                      "defaultOpen": false,
                                      "displayEmpty": false,
                                      "labelId": undefined,
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "fontSize": "1rem",
                                      "width": "260px",
                                    }
                                  }
                                  value=""
                                >
                                  <ForwardRef(InputBase)
                                    className=""
                                    classes={
                                      Object {
                                        "input": "MuiInput-input",
                                        "root": "MuiInput-root MuiInput-underline",
                                      }
                                    }
                                    components={
                                      Object {
                                        "Input": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "__emotion_base": "input",
                                          "__emotion_forwardProp": [Function],
                                          "__emotion_real": [Circular],
                                          "__emotion_styles": Array [
                                            "label:MuiInputBase-input;",
                                            [Function],
                                            [Function],
                                            [Function],
                                            "label:MuiInput-input;",
                                            Object {},
                                            [Function],
                                            [Function],
                                          ],
                                          "defaultProps": undefined,
                                          "render": [Function],
                                          "withComponent": [Function],
                                        },
                                        "Root": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "__emotion_base": "div",
                                          "__emotion_forwardProp": [Function],
                                          "__emotion_real": [Circular],
                                          "__emotion_styles": Array [
                                            "label:MuiInputBase-root;",
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            "label:MuiInput-root;",
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "defaultProps": undefined,
                                          "render": [Function],
                                          "withComponent": [Function],
                                        },
                                      }
                                    }
                                    componentsProps={
                                      Object {
                                        "root": Object {
                                          "ownerState": Object {
                                            "disableUnderline": undefined,
                                          },
                                        },
                                      }
                                    }
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "aria-describedby": [Function],
                                          "aria-label": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultOpen": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": undefined,
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <WithStyles(ForwardRef(MenuItem))
                                            style={
                                              Object {
                                                "fontSize": "1rem",
                                              }
                                            }
                                            value=""
                                          >
                                            <em>
                                              Wszystkie kategorie
                                            </em>
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          Array [
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Strony www"
                                            >
                                              Strony www
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Excel"
                                            >
                                              Excel
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Korepetycje"
                                            >
                                              Korepetycje
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Opieka nad dziećmi"
                                            >
                                              Opieka nad dziećmi
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Wyprowadzanie psów"
                                            >
                                              Wyprowadzanie psów
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Fotografia"
                                            >
                                              Fotografia
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              style={
                                                Object {
                                                  "fontSize": "1rem",
                                                }
                                              }
                                              value="Tłumaczenia"
                                            >
                                              Tłumaczenia
                                            </WithStyles(ForwardRef(MenuItem))>,
                                          ],
                                        ],
                                        "classes": Object {},
                                        "defaultOpen": false,
                                        "displayEmpty": false,
                                        "labelId": undefined,
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "fontSize": "1rem",
                                        "width": "260px",
                                      }
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <GlobalStyles
                                      styles={
                                        Object {
                                          "@keyframes mui-auto-fill": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                          "@keyframes mui-auto-fill-cancel": Object {
                                            "from": Object {
                                              "display": "block",
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <GlobalStyles
                                        defaultTheme={
                                          Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "not": [Function],
                                              "only": [Function],
                                              "unit": "px",
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1200,
                                                "md": 900,
                                                "sm": 600,
                                                "xl": 1536,
                                                "xs": 0,
                                              },
                                            },
                                            "components": Object {},
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "palette": Object {
                                              "action": Object {
                                                "activatedOpacity": 0.12,
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "disabledOpacity": 0.38,
                                                "focus": "rgba(0, 0, 0, 0.12)",
                                                "focusOpacity": 0.12,
                                                "hover": "rgba(0, 0, 0, 0.04)",
                                                "hoverOpacity": 0.04,
                                                "selected": "rgba(0, 0, 0, 0.08)",
                                                "selectedOpacity": 0.08,
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fff",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c62828",
                                                "light": "#ef5350",
                                                "main": "#d32f2f",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#f5f5f5",
                                                "A200": "#eeeeee",
                                                "A400": "#bdbdbd",
                                                "A700": "#616161",
                                              },
                                              "info": Object {
                                                "contrastText": "#fff",
                                                "dark": "#01579b",
                                                "light": "#03a9f4",
                                                "main": "#0288d1",
                                              },
                                              "mode": "light",
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#1565c0",
                                                "light": "#42a5f5",
                                                "main": "#1976d2",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#7b1fa2",
                                                "light": "#ba68c8",
                                                "main": "#9c27b0",
                                              },
                                              "success": Object {
                                                "contrastText": "#fff",
                                                "dark": "#1b5e20",
                                                "light": "#4caf50",
                                                "main": "#2e7d32",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.6)",
                                              },
                                              "tonalOffset": 0.2,
                                              "warning": Object {
                                                "contrastText": "#fff",
                                                "dark": "#e65100",
                                                "light": "#ff9800",
                                                "main": "#ed6c02",
                                              },
                                            },
                                            "shadows": Array [
                                              "none",
                                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1.167,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1.2,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.167,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.235,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.334,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "speedDial": 1050,
                                              "tooltip": 1500,
                                            },
                                          }
                                        }
                                        styles={
                                          Object {
                                            "@keyframes mui-auto-fill": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                            "@keyframes mui-auto-fill-cancel": Object {
                                              "from": Object {
                                                "display": "block",
                                              },
                                            },
                                          }
                                        }
                                      >
                                        <EmotionGlobal
                                          styles={
                                            Object {
                                              "@keyframes mui-auto-fill": Object {
                                                "from": Object {
                                                  "display": "block",
                                                },
                                              },
                                              "@keyframes mui-auto-fill-cancel": Object {
                                                "from": Object {
                                                  "display": "block",
                                                },
                                              },
                                            }
                                          }
                                        />
                                      </GlobalStyles>
                                    </GlobalStyles>
                                    <MuiInputRoot
                                      className="MuiInput-root MuiInput-underline MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl"
                                      classes={
                                        Object {
                                          "input": "MuiInput-input",
                                          "root": "MuiInput-root MuiInput-underline",
                                        }
                                      }
                                      onClick={[Function]}
                                      ownerState={
                                        Object {
                                          "className": "",
                                          "classes": Object {
                                            "input": "MuiInput-input",
                                            "root": "MuiInput-root MuiInput-underline",
                                          },
                                          "color": "primary",
                                          "components": Object {
                                            "Input": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "__emotion_base": "input",
                                              "__emotion_forwardProp": [Function],
                                              "__emotion_real": [Circular],
                                              "__emotion_styles": Array [
                                                "label:MuiInputBase-input;",
                                                [Function],
                                                [Function],
                                                [Function],
                                                "label:MuiInput-input;",
                                                Object {},
                                                [Function],
                                                [Function],
                                              ],
                                              "defaultProps": undefined,
                                              "render": [Function],
                                              "withComponent": [Function],
                                            },
                                            "Root": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "__emotion_base": "div",
                                              "__emotion_forwardProp": [Function],
                                              "__emotion_real": [Circular],
                                              "__emotion_styles": Array [
                                                "label:MuiInputBase-root;",
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                "label:MuiInput-root;",
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "defaultProps": undefined,
                                              "render": [Function],
                                              "withComponent": [Function],
                                            },
                                          },
                                          "componentsProps": Object {
                                            "root": Object {
                                              "ownerState": Object {
                                                "disableUnderline": undefined,
                                              },
                                            },
                                          },
                                          "disableUnderline": undefined,
                                          "disabled": false,
                                          "endAdornment": undefined,
                                          "error": false,
                                          "focused": false,
                                          "formControl": Object {
                                            "adornedStart": false,
                                            "color": "primary",
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "fullWidth": false,
                                            "hiddenLabel": false,
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "registerEffect": [Function],
                                            "required": false,
                                            "setAdornedStart": [Function],
                                            "size": "medium",
                                            "variant": "standard",
                                          },
                                          "fullWidth": false,
                                          "hiddenLabel": false,
                                          "inputComponent": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "MenuProps": [Function],
                                              "SelectDisplayProps": [Function],
                                              "aria-describedby": [Function],
                                              "aria-label": [Function],
                                              "autoFocus": [Function],
                                              "autoWidth": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "defaultOpen": [Function],
                                              "defaultValue": [Function],
                                              "disabled": [Function],
                                              "displayEmpty": [Function],
                                              "inputRef": [Function],
                                              "labelId": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onClose": [Function],
                                              "onFocus": [Function],
                                              "onOpen": [Function],
                                              "open": [Function],
                                              "readOnly": [Function],
                                              "renderValue": [Function],
                                              "tabIndex": [Function],
                                              "type": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "inputProps": Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "MenuProps": undefined,
                                            "SelectDisplayProps": Object {
                                              "id": undefined,
                                            },
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(ForwardRef(MenuItem))
                                                style={
                                                  Object {
                                                    "fontSize": "1rem",
                                                  }
                                                }
                                                value=""
                                              >
                                                <em>
                                                  Wszystkie kategorie
                                                </em>
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              Array [
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Strony www"
                                                >
                                                  Strony www
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Excel"
                                                >
                                                  Excel
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Korepetycje"
                                                >
                                                  Korepetycje
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Opieka nad dziećmi"
                                                >
                                                  Opieka nad dziećmi
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Wyprowadzanie psów"
                                                >
                                                  Wyprowadzanie psów
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Fotografia"
                                                >
                                                  Fotografia
                                                </WithStyles(ForwardRef(MenuItem))>,
                                                <WithStyles(ForwardRef(MenuItem))
                                                  style={
                                                    Object {
                                                      "fontSize": "1rem",
                                                    }
                                                  }
                                                  value="Tłumaczenia"
                                                >
                                                  Tłumaczenia
                                                </WithStyles(ForwardRef(MenuItem))>,
                                              ],
                                            ],
                                            "classes": Object {},
                                            "defaultOpen": false,
                                            "displayEmpty": false,
                                            "labelId": undefined,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                            "variant": "standard",
                                          },
                                          "multiline": false,
                                          "onChange": [Function],
                                          "size": "medium",
                                          "startAdornment": undefined,
                                          "style": Object {
                                            "fontSize": "1rem",
                                            "width": "260px",
                                          },
                                          "type": "text",
                                          "value": "",
                                        }
                                      }
                                      style={
                                        Object {
                                          "fontSize": "1rem",
                                          "width": "260px",
                                        }
                                      }
                                    >
                                      <Noop />
                                      <div
                                        className="MuiInput-root MuiInput-underline MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl css-1480iag-MuiInputBase-root-MuiInput-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "fontSize": "1rem",
                                            "width": "260px",
                                          }
                                        }
                                      >
                                        <MuiInputInput
                                          IconComponent={
                                            Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            }
                                          }
                                          SelectDisplayProps={
                                            Object {
                                              "id": undefined,
                                            }
                                          }
                                          aria-invalid={false}
                                          as={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "MenuProps": [Function],
                                                "SelectDisplayProps": [Function],
                                                "aria-describedby": [Function],
                                                "aria-label": [Function],
                                                "autoFocus": [Function],
                                                "autoWidth": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "defaultOpen": [Function],
                                                "defaultValue": [Function],
                                                "disabled": [Function],
                                                "displayEmpty": [Function],
                                                "inputRef": [Function],
                                                "labelId": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onClose": [Function],
                                                "onFocus": [Function],
                                                "onOpen": [Function],
                                                "open": [Function],
                                                "readOnly": [Function],
                                                "renderValue": [Function],
                                                "tabIndex": [Function],
                                                "type": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          autoWidth={false}
                                          className="MuiInput-input MuiInputBase-input"
                                          classes={Object {}}
                                          defaultOpen={false}
                                          disabled={false}
                                          displayEmpty={false}
                                          multiple={false}
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          ownerState={
                                            Object {
                                              "className": "",
                                              "classes": Object {
                                                "input": "MuiInput-input",
                                                "root": "MuiInput-root MuiInput-underline",
                                              },
                                              "color": "primary",
                                              "components": Object {
                                                "Input": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "input",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiInputBase-input;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    "label:MuiInput-input;",
                                                    Object {},
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "Root": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "div",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiInputBase-root;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    "label:MuiInput-root;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                              },
                                              "componentsProps": Object {
                                                "root": Object {
                                                  "ownerState": Object {
                                                    "disableUnderline": undefined,
                                                  },
                                                },
                                              },
                                              "disabled": false,
                                              "endAdornment": undefined,
                                              "error": false,
                                              "focused": false,
                                              "formControl": Object {
                                                "adornedStart": false,
                                                "color": "primary",
                                                "disabled": false,
                                                "error": false,
                                                "filled": false,
                                                "focused": false,
                                                "fullWidth": false,
                                                "hiddenLabel": false,
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "registerEffect": [Function],
                                                "required": false,
                                                "setAdornedStart": [Function],
                                                "size": "medium",
                                                "variant": "standard",
                                              },
                                              "fullWidth": false,
                                              "hiddenLabel": false,
                                              "inputComponent": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "MenuProps": [Function],
                                                  "SelectDisplayProps": [Function],
                                                  "aria-describedby": [Function],
                                                  "aria-label": [Function],
                                                  "autoFocus": [Function],
                                                  "autoWidth": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "defaultOpen": [Function],
                                                  "defaultValue": [Function],
                                                  "disabled": [Function],
                                                  "displayEmpty": [Function],
                                                  "inputRef": [Function],
                                                  "labelId": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": [Function],
                                                  "onFocus": [Function],
                                                  "onOpen": [Function],
                                                  "open": [Function],
                                                  "readOnly": [Function],
                                                  "renderValue": [Function],
                                                  "tabIndex": [Function],
                                                  "type": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              },
                                              "inputProps": Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "MenuProps": undefined,
                                                "SelectDisplayProps": Object {
                                                  "id": undefined,
                                                },
                                                "autoWidth": false,
                                                "children": Array [
                                                  <WithStyles(ForwardRef(MenuItem))
                                                    style={
                                                      Object {
                                                        "fontSize": "1rem",
                                                      }
                                                    }
                                                    value=""
                                                  >
                                                    <em>
                                                      Wszystkie kategorie
                                                    </em>
                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                  Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Strony www"
                                                    >
                                                      Strony www
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Excel"
                                                    >
                                                      Excel
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Korepetycje"
                                                    >
                                                      Korepetycje
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Opieka nad dziećmi"
                                                    >
                                                      Opieka nad dziećmi
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Wyprowadzanie psów"
                                                    >
                                                      Wyprowadzanie psów
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Fotografia"
                                                    >
                                                      Fotografia
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value="Tłumaczenia"
                                                    >
                                                      Tłumaczenia
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                ],
                                                "classes": Object {},
                                                "defaultOpen": false,
                                                "displayEmpty": false,
                                                "labelId": undefined,
                                                "multiple": false,
                                                "onClose": undefined,
                                                "onOpen": undefined,
                                                "open": undefined,
                                                "renderValue": undefined,
                                                "type": undefined,
                                                "variant": "standard",
                                              },
                                              "multiline": false,
                                              "onChange": [Function],
                                              "size": "medium",
                                              "startAdornment": undefined,
                                              "style": Object {
                                                "fontSize": "1rem",
                                                "width": "260px",
                                              },
                                              "type": "text",
                                              "value": "",
                                            }
                                          }
                                          required={false}
                                          value=""
                                          variant="standard"
                                        >
                                          <Noop />
                                          <ForwardRef(SelectInput)
                                            IconComponent={
                                              Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              }
                                            }
                                            SelectDisplayProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            aria-invalid={false}
                                            autoWidth={false}
                                            className="MuiInput-input MuiInputBase-input css-1x51dt5-MuiInputBase-input-MuiInput-input"
                                            classes={Object {}}
                                            defaultOpen={false}
                                            disabled={false}
                                            displayEmpty={false}
                                            multiple={false}
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            value=""
                                            variant="standard"
                                          >
                                            <MuiSelectSelect
                                              aria-expanded="false"
                                              aria-haspopup="listbox"
                                              className="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1x51dt5-MuiInputBase-input-MuiInput-input"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              ownerState={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "aria-describedby": undefined,
                                                  "aria-invalid": false,
                                                  "autoComplete": undefined,
                                                  "autoFocus": undefined,
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value=""
                                                    >
                                                      <em>
                                                        Wszystkie kategorie
                                                      </em>
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Strony www"
                                                      >
                                                        Strony www
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Excel"
                                                      >
                                                        Excel
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Korepetycje"
                                                      >
                                                        Korepetycje
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Opieka nad dziećmi"
                                                      >
                                                        Opieka nad dziećmi
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Wyprowadzanie psów"
                                                      >
                                                        Wyprowadzanie psów
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Fotografia"
                                                      >
                                                        Fotografia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Tłumaczenia"
                                                      >
                                                        Tłumaczenia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "className": "MuiInput-input MuiInputBase-input css-1x51dt5-MuiInputBase-input-MuiInput-input",
                                                  "classes": Object {},
                                                  "defaultOpen": false,
                                                  "defaultValue": undefined,
                                                  "disabled": false,
                                                  "displayEmpty": false,
                                                  "id": undefined,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "name": undefined,
                                                  "onAnimationStart": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": undefined,
                                                  "onFocus": [Function],
                                                  "onKeyDown": undefined,
                                                  "onKeyUp": undefined,
                                                  "onOpen": undefined,
                                                  "open": false,
                                                  "placeholder": undefined,
                                                  "readOnly": undefined,
                                                  "renderValue": undefined,
                                                  "required": false,
                                                  "rows": undefined,
                                                  "type": undefined,
                                                  "value": "",
                                                  "variant": "standard",
                                                }
                                              }
                                              role="button"
                                              tabIndex={0}
                                            >
                                              <Noop />
                                              <div
                                                aria-expanded="false"
                                                aria-haspopup="listbox"
                                                className="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <span
                                                  className="notranslate"
                                                  dangerouslySetInnerHTML={
                                                    Object {
                                                      "__html": "&#8203;",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </MuiSelectSelect>
                                            <MuiSelectNativeInput
                                              aria-hidden={true}
                                              className="MuiSelect-nativeInput"
                                              classes={Object {}}
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onChange={[Function]}
                                              ownerState={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "aria-describedby": undefined,
                                                  "aria-invalid": false,
                                                  "autoComplete": undefined,
                                                  "autoFocus": undefined,
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value=""
                                                    >
                                                      <em>
                                                        Wszystkie kategorie
                                                      </em>
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Strony www"
                                                      >
                                                        Strony www
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Excel"
                                                      >
                                                        Excel
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Korepetycje"
                                                      >
                                                        Korepetycje
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Opieka nad dziećmi"
                                                      >
                                                        Opieka nad dziećmi
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Wyprowadzanie psów"
                                                      >
                                                        Wyprowadzanie psów
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Fotografia"
                                                      >
                                                        Fotografia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Tłumaczenia"
                                                      >
                                                        Tłumaczenia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "className": "MuiInput-input MuiInputBase-input css-1x51dt5-MuiInputBase-input-MuiInput-input",
                                                  "classes": Object {},
                                                  "defaultOpen": false,
                                                  "defaultValue": undefined,
                                                  "disabled": false,
                                                  "displayEmpty": false,
                                                  "id": undefined,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "name": undefined,
                                                  "onAnimationStart": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": undefined,
                                                  "onFocus": [Function],
                                                  "onKeyDown": undefined,
                                                  "onKeyUp": undefined,
                                                  "onOpen": undefined,
                                                  "open": false,
                                                  "placeholder": undefined,
                                                  "readOnly": undefined,
                                                  "renderValue": undefined,
                                                  "required": false,
                                                  "rows": undefined,
                                                  "type": undefined,
                                                  "value": "",
                                                  "variant": "standard",
                                                }
                                              }
                                              required={false}
                                              tabIndex={-1}
                                              value=""
                                            >
                                              <Noop />
                                              <input
                                                aria-hidden={true}
                                                className="MuiSelect-nativeInput css-yf8vq0-MuiSelect-nativeInput"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onChange={[Function]}
                                                required={false}
                                                tabIndex={-1}
                                                value=""
                                              />
                                            </MuiSelectNativeInput>
                                            <MuiSelectIcon
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                }
                                              }
                                              className="MuiSelect-icon MuiSelect-iconStandard"
                                              ownerState={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": undefined,
                                                  },
                                                  "aria-describedby": undefined,
                                                  "aria-invalid": false,
                                                  "autoComplete": undefined,
                                                  "autoFocus": undefined,
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      style={
                                                        Object {
                                                          "fontSize": "1rem",
                                                        }
                                                      }
                                                      value=""
                                                    >
                                                      <em>
                                                        Wszystkie kategorie
                                                      </em>
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Strony www"
                                                      >
                                                        Strony www
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Excel"
                                                      >
                                                        Excel
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Korepetycje"
                                                      >
                                                        Korepetycje
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Opieka nad dziećmi"
                                                      >
                                                        Opieka nad dziećmi
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Wyprowadzanie psów"
                                                      >
                                                        Wyprowadzanie psów
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Fotografia"
                                                      >
                                                        Fotografia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                        value="Tłumaczenia"
                                                      >
                                                        Tłumaczenia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                  ],
                                                  "className": "MuiInput-input MuiInputBase-input css-1x51dt5-MuiInputBase-input-MuiInput-input",
                                                  "classes": Object {},
                                                  "defaultOpen": false,
                                                  "defaultValue": undefined,
                                                  "disabled": false,
                                                  "displayEmpty": false,
                                                  "id": undefined,
                                                  "labelId": undefined,
                                                  "multiple": false,
                                                  "name": undefined,
                                                  "onAnimationStart": [Function],
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "onClose": undefined,
                                                  "onFocus": [Function],
                                                  "onKeyDown": undefined,
                                                  "onKeyUp": undefined,
                                                  "onOpen": undefined,
                                                  "open": false,
                                                  "placeholder": undefined,
                                                  "readOnly": undefined,
                                                  "renderValue": undefined,
                                                  "required": false,
                                                  "rows": undefined,
                                                  "type": undefined,
                                                  "value": "",
                                                  "variant": "standard",
                                                }
                                              }
                                            >
                                              <Noop />
                                              <ForwardRef(ArrowDropDownIcon)
                                                className="MuiSelect-icon MuiSelect-iconStandard css-19xtc65-MuiSelect-icon"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  className="MuiSelect-icon MuiSelect-iconStandard css-19xtc65-MuiSelect-icon"
                                                  data-testid="ArrowDropDownIcon"
                                                >
                                                  <MuiSvgIconRoot
                                                    aria-hidden={true}
                                                    as="svg"
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiSelect-icon MuiSelect-iconStandard css-19xtc65-MuiSelect-icon"
                                                    data-testid="ArrowDropDownIcon"
                                                    focusable="false"
                                                    ownerState={
                                                      Object {
                                                        "children": <path
                                                          d="M7 10l5 5 5-5z"
                                                        />,
                                                        "className": "MuiSelect-icon MuiSelect-iconStandard css-19xtc65-MuiSelect-icon",
                                                        "color": "inherit",
                                                        "component": "svg",
                                                        "data-testid": "ArrowDropDownIcon",
                                                        "fontSize": "medium",
                                                        "inheritViewBox": false,
                                                        "viewBox": "0 0 24 24",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <Noop />
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiSelect-icon MuiSelect-iconStandard css-pqjvzy-MuiSvgIcon-root-MuiSelect-icon"
                                                      data-testid="ArrowDropDownIcon"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 10l5 5 5-5z"
                                                      />
                                                    </svg>
                                                  </MuiSvgIconRoot>
                                                </ForwardRef(SvgIcon)>
                                              </ForwardRef(ArrowDropDownIcon)>
                                            </MuiSelectIcon>
                                            <ForwardRef(Menu)
                                              MenuListProps={
                                                Object {
                                                  "aria-labelledby": undefined,
                                                  "disableListWrap": true,
                                                  "role": "listbox",
                                                }
                                              }
                                              PaperProps={
                                                Object {
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-expanded="false"
                                                  aria-haspopup="listbox"
                                                  class="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  <span
                                                    class="notranslate"
                                                  >
                                                    ​
                                                  </span>
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "center",
                                                  "vertical": "bottom",
                                                }
                                              }
                                              id="menu-"
                                              onClose={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "center",
                                                  "vertical": "top",
                                                }
                                              }
                                            >
                                              <MuiMenuRoot
                                                PaperProps={
                                                  Object {
                                                    "classes": Object {
                                                      "root": "MuiMenu-paper",
                                                    },
                                                    "component": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "__emotion_base": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "component": [Function],
                                                          "elevation": [Function],
                                                          "square": [Function],
                                                          "sx": [Function],
                                                          "variant": [Function],
                                                        },
                                                        "render": [Function],
                                                      },
                                                      "__emotion_forwardProp": [Function],
                                                      "__emotion_real": [Circular],
                                                      "__emotion_styles": Array [
                                                        "label:MuiMenu-paper;",
                                                        Object {
                                                          "WebkitOverflowScrolling": "touch",
                                                          "maxHeight": "calc(100% - 96px)",
                                                        },
                                                        [Function],
                                                        [Function],
                                                      ],
                                                      "defaultProps": undefined,
                                                      "render": [Function],
                                                      "withComponent": [Function],
                                                    },
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                TransitionProps={
                                                  Object {
                                                    "onEntering": [Function],
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-expanded="false"
                                                    aria-haspopup="listbox"
                                                    class="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    <span
                                                      class="notranslate"
                                                    >
                                                      ​
                                                    </span>
                                                  </div>
                                                }
                                                anchorOrigin={
                                                  Object {
                                                    "horizontal": "center",
                                                    "vertical": "bottom",
                                                  }
                                                }
                                                className="MuiMenu-root"
                                                id="menu-"
                                                onClose={[Function]}
                                                open={false}
                                                ownerState={
                                                  Object {
                                                    "MenuListProps": Object {
                                                      "aria-labelledby": undefined,
                                                      "disableListWrap": true,
                                                      "role": "listbox",
                                                    },
                                                    "PaperProps": Object {
                                                      "style": Object {
                                                        "minWidth": undefined,
                                                      },
                                                    },
                                                    "TransitionProps": Object {},
                                                    "anchorEl": <div
                                                      aria-expanded="false"
                                                      aria-haspopup="listbox"
                                                      class="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <span
                                                        class="notranslate"
                                                      >
                                                        ​
                                                      </span>
                                                    </div>,
                                                    "anchorOrigin": Object {
                                                      "horizontal": "center",
                                                      "vertical": "bottom",
                                                    },
                                                    "autoFocus": true,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="true"
                                                        data-value=""
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={true}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        <em>
                                                          Wszystkie kategorie
                                                        </em>
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Strony www"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Strony www
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Excel"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Excel
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Korepetycje"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Korepetycje
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Opieka nad dziećmi"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Opieka nad dziećmi
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Wyprowadzanie psów"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Wyprowadzanie psów
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Fotografia"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Fotografia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        aria-selected="false"
                                                        data-value="Tłumaczenia"
                                                        onClick={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="option"
                                                        selected={false}
                                                        style={
                                                          Object {
                                                            "fontSize": "1rem",
                                                          }
                                                        }
                                                      >
                                                        Tłumaczenia
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                    "disableAutoFocusItem": false,
                                                    "id": "menu-",
                                                    "onClose": [Function],
                                                    "onEntering": undefined,
                                                    "open": false,
                                                    "transformOrigin": Object {
                                                      "horizontal": "center",
                                                      "vertical": "top",
                                                    },
                                                    "transitionDuration": "auto",
                                                    "variant": "selectedMenu",
                                                  }
                                                }
                                                transformOrigin={
                                                  Object {
                                                    "horizontal": "center",
                                                    "vertical": "top",
                                                  }
                                                }
                                                transitionDuration="auto"
                                              >
                                                <Noop />
                                                <ForwardRef(Popover)
                                                  PaperProps={
                                                    Object {
                                                      "classes": Object {
                                                        "root": "MuiMenu-paper",
                                                      },
                                                      "component": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "__emotion_base": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "component": [Function],
                                                            "elevation": [Function],
                                                            "square": [Function],
                                                            "sx": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        },
                                                        "__emotion_forwardProp": [Function],
                                                        "__emotion_real": [Circular],
                                                        "__emotion_styles": Array [
                                                          "label:MuiMenu-paper;",
                                                          Object {
                                                            "WebkitOverflowScrolling": "touch",
                                                            "maxHeight": "calc(100% - 96px)",
                                                          },
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "defaultProps": undefined,
                                                        "render": [Function],
                                                        "withComponent": [Function],
                                                      },
                                                      "style": Object {
                                                        "minWidth": undefined,
                                                      },
                                                    }
                                                  }
                                                  TransitionProps={
                                                    Object {
                                                      "onEntering": [Function],
                                                    }
                                                  }
                                                  anchorEl={
                                                    <div
                                                      aria-expanded="false"
                                                      aria-haspopup="listbox"
                                                      class="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      <span
                                                        class="notranslate"
                                                      >
                                                        ​
                                                      </span>
                                                    </div>
                                                  }
                                                  anchorOrigin={
                                                    Object {
                                                      "horizontal": "center",
                                                      "vertical": "bottom",
                                                    }
                                                  }
                                                  className="MuiMenu-root css-oouctw-MuiMenu-root"
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                  transformOrigin={
                                                    Object {
                                                      "horizontal": "center",
                                                      "vertical": "top",
                                                    }
                                                  }
                                                  transitionDuration="auto"
                                                >
                                                  <MuiPopoverRoot
                                                    BackdropProps={
                                                      Object {
                                                        "invisible": true,
                                                      }
                                                    }
                                                    className="MuiPopover-root MuiMenu-root css-oouctw-MuiMenu-root"
                                                    container={<body />}
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    open={false}
                                                    ownerState={
                                                      Object {
                                                        "PaperProps": Object {
                                                          "classes": Object {
                                                            "root": "MuiMenu-paper",
                                                          },
                                                          "component": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "component": [Function],
                                                                "elevation": [Function],
                                                                "square": [Function],
                                                                "sx": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            },
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiMenu-paper;",
                                                              Object {
                                                                "WebkitOverflowScrolling": "touch",
                                                                "maxHeight": "calc(100% - 96px)",
                                                              },
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          },
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        },
                                                        "TransitionComponent": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "muiSupportAuto": true,
                                                          "propTypes": Object {
                                                            "addEndListener": [Function],
                                                            "appear": [Function],
                                                            "children": [Function],
                                                            "easing": [Function],
                                                            "in": [Function],
                                                            "onEnter": [Function],
                                                            "onEntered": [Function],
                                                            "onEntering": [Function],
                                                            "onExit": [Function],
                                                            "onExited": [Function],
                                                            "onExiting": [Function],
                                                            "style": [Function],
                                                            "timeout": [Function],
                                                          },
                                                          "render": [Function],
                                                        },
                                                        "TransitionProps": Object {},
                                                        "anchorEl": <div
                                                          aria-expanded="false"
                                                          aria-haspopup="listbox"
                                                          class="MuiSelect-select MuiSelect-standard MuiInput-input MuiInputBase-input css-1rxz5jq-MuiSelect-select-MuiInputBase-input-MuiInput-input"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          <span
                                                            class="notranslate"
                                                          >
                                                            ​
                                                          </span>
                                                        </div>,
                                                        "anchorOrigin": Object {
                                                          "horizontal": "center",
                                                          "vertical": "bottom",
                                                        },
                                                        "anchorReference": "anchorEl",
                                                        "children": <MuiMenuList
                                                          actions={
                                                            Object {
                                                              "current": null,
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          disableListWrap={true}
                                                          onKeyDown={[Function]}
                                                          role="listbox"
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="true"
                                                            data-value=""
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={true}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            <em>
                                                              Wszystkie kategorie
                                                            </em>
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Strony www"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Strony www
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Excel"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Excel
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Korepetycje"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Korepetycje
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Opieka nad dziećmi"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Opieka nad dziećmi
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Wyprowadzanie psów"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Wyprowadzanie psów
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Fotografia"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Fotografia
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            aria-selected="false"
                                                            data-value="Tłumaczenia"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="option"
                                                            selected={false}
                                                            style={
                                                              Object {
                                                                "fontSize": "1rem",
                                                              }
                                                            }
                                                          >
                                                            Tłumaczenia
                                                          </WithStyles(ForwardRef(MenuItem))>
                                                        </MuiMenuList>,
                                                        "className": "MuiMenu-root css-oouctw-MuiMenu-root",
                                                        "classes": undefined,
                                                        "elevation": 8,
                                                        "id": "menu-",
                                                        "marginThreshold": 16,
                                                        "onClose": [Function],
                                                        "open": false,
                                                        "transformOrigin": Object {
                                                          "horizontal": "center",
                                                          "vertical": "top",
                                                        },
                                                        "transitionDuration": "auto",
                                                      }
                                                    }
                                                  >
                                                    <Noop />
                                                    <ForwardRef(Modal)
                                                      BackdropProps={
                                                        Object {
                                                          "invisible": true,
                                                        }
                                                      }
                                                      className="MuiPopover-root MuiMenu-root css-bclbye-MuiPopover-root-MuiMenu-root"
                                                      container={<body />}
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(ModalUnstyled)
                                                        BackdropComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "__emotion_base": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "components": [Function],
                                                                "componentsProps": [Function],
                                                                "invisible": [Function],
                                                                "open": [Function],
                                                                "sx": [Function],
                                                                "transitionDuration": [Function],
                                                              },
                                                              "render": [Function],
                                                            },
                                                            "__emotion_forwardProp": [Function],
                                                            "__emotion_real": [Circular],
                                                            "__emotion_styles": Array [
                                                              "label:MuiModal-backdrop;",
                                                              Object {
                                                                "zIndex": -1,
                                                              },
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "defaultProps": undefined,
                                                            "render": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        BackdropProps={
                                                          Object {
                                                            "invisible": true,
                                                          }
                                                        }
                                                        className="MuiPopover-root MuiMenu-root css-bclbye-MuiPopover-root-MuiMenu-root"
                                                        closeAfterTransition={false}
                                                        components={
                                                          Object {
                                                            "Root": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "__emotion_base": "div",
                                                              "__emotion_forwardProp": [Function],
                                                              "__emotion_real": [Circular],
                                                              "__emotion_styles": Array [
                                                                "label:MuiModal-root;",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "defaultProps": undefined,
                                                              "render": [Function],
                                                              "withComponent": [Function],
                                                            },
                                                          }
                                                        }
                                                        componentsProps={
                                                          Object {
                                                            "root": Object {
                                                              "ownerState": Object {},
                                                            },
                                                          }
                                                        }
                                                        container={<body />}
                                                        disableAutoFocus={false}
                                                        disableEnforceFocus={false}
                                                        disableEscapeKeyDown={false}
                                                        disablePortal={false}
                                                        disableRestoreFocus={false}
                                                        disableScrollLock={false}
                                                        hideBackdrop={false}
                                                        id="menu-"
                                                        keepMounted={false}
                                                        onClose={[Function]}
                                                        onTransitionEnter={[Function]}
                                                        onTransitionExited={[Function]}
                                                        open={false}
                                                      />
                                                    </ForwardRef(Modal)>
                                                  </MuiPopoverRoot>
                                                </ForwardRef(Popover)>
                                              </MuiMenuRoot>
                                            </ForwardRef(Menu)>
                                          </ForwardRef(SelectInput)>
                                        </MuiInputInput>
                                      </div>
                                    </MuiInputRoot>
                                  </ForwardRef(InputBase)>
                                </ForwardRef(Input)>
                              </ForwardRef(Select)>
                            </div>
                          </MuiFormControlRoot>
                        </ForwardRef(FormControl)>
                      </div>
                    </Styled(MuiBox)>
                    <Styled(MuiBox)
                      align="center"
                      padding={2}
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      <div
                        align="center"
                        className="MuiBox-root MuiBox-root-11"
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(CircularProgress))
                          align="center"
                          color="secondary"
                          style={
                            Object {
                              "margin": "2rem",
                            }
                          }
                        >
                          <ForwardRef(CircularProgress)
                            align="center"
                            classes={
                              Object {
                                "circle": "MuiCircularProgress-circle",
                                "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                                "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                                "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                                "circleStatic": "MuiCircularProgress-circleStatic",
                                "colorPrimary": "MuiCircularProgress-colorPrimary",
                                "colorSecondary": "MuiCircularProgress-colorSecondary",
                                "determinate": "MuiCircularProgress-determinate",
                                "indeterminate": "MuiCircularProgress-indeterminate",
                                "root": "MuiCircularProgress-root",
                                "static": "MuiCircularProgress-static",
                                "svg": "MuiCircularProgress-svg",
                              }
                            }
                            color="secondary"
                            style={
                              Object {
                                "margin": "2rem",
                              }
                            }
                          >
                            <div
                              align="center"
                              className="MuiCircularProgress-root MuiCircularProgress-colorSecondary MuiCircularProgress-indeterminate"
                              role="progressbar"
                              style={
                                Object {
                                  "height": 40,
                                  "margin": "2rem",
                                  "width": 40,
                                }
                              }
                            >
                              <svg
                                className="MuiCircularProgress-svg"
                                viewBox="22 22 44 44"
                              >
                                <circle
                                  className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                                  cx={44}
                                  cy={44}
                                  fill="none"
                                  r={20.2}
                                  strokeWidth={3.6}
                                  style={Object {}}
                                />
                              </svg>
                            </div>
                          </ForwardRef(CircularProgress)>
                        </WithStyles(ForwardRef(CircularProgress))>
                      </div>
                    </Styled(MuiBox)>
                    <Styled(MuiBox)
                      display="flex"
                      flexDirection="row"
                      flexWrap="wrap"
                      justifyContent="center"
                      padding="0 2rem 4rem 2rem"
                    >
                      <div
                        className="MuiBox-root MuiBox-root-9"
                      />
                    </Styled(MuiBox)>
                  </div>
                </Styled(MuiBox)>
              </TasksList>
              <Styled(MuiBox)
                align="center"
                id="show-more-card-button"
                marginBottom="2rem"
              >
                <div
                  align="center"
                  className="MuiBox-root MuiBox-root-10"
                  id="show-more-card-button"
                >
                  <WithStyles(ForwardRef(Button))
                    endIcon={<Memo />}
                    onClick={[Function]}
                    variant="outlined"
                  >
                    <ForwardRef(Button)
                      classes={
                        Object {
                          "colorInherit": "MuiButton-colorInherit",
                          "contained": "MuiButton-contained",
                          "containedPrimary": "MuiButton-containedPrimary",
                          "containedSecondary": "MuiButton-containedSecondary",
                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                          "disableElevation": "MuiButton-disableElevation",
                          "disabled": "Mui-disabled",
                          "endIcon": "MuiButton-endIcon",
                          "focusVisible": "Mui-focusVisible",
                          "fullWidth": "MuiButton-fullWidth",
                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                          "label": "MuiButton-label",
                          "outlined": "MuiButton-outlined",
                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                          "root": "MuiButton-root",
                          "sizeLarge": "MuiButton-sizeLarge",
                          "sizeSmall": "MuiButton-sizeSmall",
                          "startIcon": "MuiButton-startIcon",
                          "text": "MuiButton-text",
                          "textPrimary": "MuiButton-textPrimary",
                          "textSecondary": "MuiButton-textSecondary",
                          "textSizeLarge": "MuiButton-textSizeLarge",
                          "textSizeSmall": "MuiButton-textSizeSmall",
                        }
                      }
                      endIcon={<Memo />}
                      onClick={[Function]}
                      variant="outlined"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiButton-root MuiButton-outlined"
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                        type="button"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiButton-root MuiButton-outlined"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <button
                            className="MuiButtonBase-root MuiButton-root MuiButton-outlined"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiButton-label"
                            >
                              Załaduj więcej
                              <span
                                className="MuiButton-endIcon MuiButton-iconSizeMedium"
                              >
                                <ForwardRef(ArrowDownwardIcon)>
                                  <WithStyles(ForwardRef(SvgIcon))>
                                    <ForwardRef(SvgIcon)
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef(ArrowDownwardIcon)>
                              </span>
                            </span>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Button)>
                  </WithStyles(ForwardRef(Button))>
                </div>
              </Styled(MuiBox)>
            </div>
          </Styled(MuiBox)>
        </TasksPage>
      </ThemeProvider>
    </Provider>
  </Router>
</BrowserRouter>
`;
